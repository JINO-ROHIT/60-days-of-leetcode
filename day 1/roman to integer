Problem Link - https://leetcode.com/problems/roman-to-integer/

class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """
        map = {'I' : 1, 'V' : 5, 'X' : 10, 'L' : 50, 'C' : 100, 
               'D' : 500, 'M' : 1000}
        ssum = map[s[0]]
        prev = 0
        curr = 0
        for i in range(1, len(s)):
            curr = s[i]
            prev = s[i - 1]
            if map[curr] > map[prev]:
                ssum += map[curr] - (2 * map[prev])
            else:
                ssum += map[curr]
        return ssum

The trick is the pattern that is if the prev number is less than the next number, subtraction should happen
eg : IV -------> 1 < 5
      1 + 5 - 2*(1) ---------------------->(i) where i is the previous number
      = 4
     XL -------> 10 < 50
     10 + 50 - 2*(10)
     = 40
